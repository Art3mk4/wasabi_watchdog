services:
  watchdog_app:
    image: art3mk4/wasabi_watchdog:latest
    restart: unless-stopped
    volumes:
      - './storage/logs:/app/storage/logs'
      - './proxy-list.txt:/app/proxy-list.txt'
    environment:
      APP_KEY: '${APP_KEY}'

      TZ: '${TZ:-UTC}'
      NODE_ENV: '${NODE_ENV:-production}'

      POSTGRES_HOST: '${DB_HOST:-postgres}'
      POSTGRES_PORT: '${DB_PORT:-5432}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-}'

      LOG_LEVEL: '${LOG_LEVEL:-trace}'
      LOGTAIL_SOURCE_TOKEN: '${LOGTAIL_SOURCE_TOKEN:-}'

    ports:
      - '${PORT:-80}:80'

    depends_on:
      postgres:
        condition: service_healthy

    networks:
      - watchdog_network

  postgres:
    image: 'postgres:17-alpine'
    restart: unless-stopped
    environment:
      POSTGRES_USER: '${DB_USER}'
      POSTGRES_PASSWORD: '${DB_PASSWROD}'
      POSTGRES_DB: '${DB_DATABASE}'
    ports:
      - '${FORWARD_REDIS_PORT:-5432}:5432'
    volumes:
      - 'postgres-data:/var/lib/postgresql/data'
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready' -U ${DB_USER} -d ${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - watchdog_network

volumes:
  postgres-data:

networks:
  watchdog_network:
    driver: bridge
